# Generated by Django 5.0.6 on 2024-05-12 01:41

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AllocationClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Broker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('registration_number', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('value', models.FloatField()),
                ('realized_gain', models.FloatField()),
                ('unrealized_gain', models.FloatField()),
                ('total_gain', models.FloatField()),
                ('daily_profitability', models.FloatField()),
                ('accumulated_profitability', models.FloatField()),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticker', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='portfolioengine.country')),
            ],
        ),
        migrations.CreateModel(
            name='PositionData',
            fields=[
                ('historicaldata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='portfolioengine.historicaldata')),
                ('quantity', models.FloatField()),
                ('average_cost', models.FloatField()),
            ],
            bases=('portfolioengine.historicaldata',),
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolios', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allocation_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='portfolioengine.allocationclass')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='portfolioengine.asset')),
                ('broker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='portfolioengine.broker')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='portfolioengine.portfolio')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField()),
                ('type', models.CharField(max_length=10)),
                ('quantity', models.FloatField()),
                ('price', models.FloatField()),
                ('brokerage_fee', models.FloatField()),
                ('other_fees', models.FloatField()),
                ('notes', models.CharField(max_length=200)),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='portfolioengine.position')),
            ],
        ),
        migrations.CreateModel(
            name='AssetData',
            fields=[
                ('positiondata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='portfolioengine.positiondata')),
                ('close', models.FloatField()),
                ('dividends', models.FloatField()),
                ('stock_splits', models.FloatField()),
            ],
            bases=('portfolioengine.positiondata',),
        ),
    ]
